@model List<ThreadModel>

@if (Model != null && Model.Any())
{
    <div class="common-container">
        @foreach (var thread in Model.OrderBy(t => !t.isPinned))
        {
            <a class="common-section" href="@Url.Action("Index", "Thread", new {threadId = thread.Id})">
                <div class="icons">
                    @if (thread.isPinned)
                    {
                        <i class="fa-solid fa-thumbtack"></i>
                    }

                    <div class="relative-time-text">
                        <span class="relative-time" data-date="@thread.Date"></span>
                        <span><i class="fa-regular fa-eye"></i>@thread.ViewCount</span>
                    </div>
                </div>
                <h2>@thread.Title</h2>
                <div class="paragraph-container">@thread.Text</div>
            </a>
        }
    </div>
}
else
{
    <div class="common-section">
        <p>No threads are available for this topic.</p>
    </div>
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script>
    function updateRelativeTimes() {
        var relativeTimeElements = document.querySelectorAll('.relative-time');
        relativeTimeElements.forEach(function (element) {
            var dateToDisplay = element.getAttribute('data-date');
            var relativeTime = moment(dateToDisplay).fromNow();
            element.innerHTML = `<i class="fa-regular fa-calendar"></i>${relativeTime}`;
        });
    }

    updateRelativeTimes();

    setInterval(updateRelativeTimes, 60000);
</script>
